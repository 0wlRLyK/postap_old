# Generated by Django 3.0.5 on 2020-04-22 20:43

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Название категории')),
                ('slug',
                 models.CharField(help_text='Навзание, которое будет отображаться в URL', max_length=25, unique=True)),
                ('descript', models.TextField()),
                ('image',
                 models.ImageField(blank=True, default='postap.png', upload_to='entries', verbose_name='Изображение')),
                ('icon', models.FileField(blank=True, help_text='Форматы svg, png, gif', upload_to='entries/categories',
                                          validators=[
                                              django.core.validators.FileExtensionValidator(['png', 'gif', 'svg'])],
                                          verbose_name='Иконка категории')),
            ],
        ),
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('slug',
                 models.SlugField(help_text='Навзание, которое будет отображаться в URL', max_length=25, unique=True)),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='Время добавления')),
                ('descript', models.TextField()),
                ('image',
                 models.ImageField(default='postap.png', null=True, upload_to='entries/', verbose_name='Илюстрация')),
                ('inTop', models.BooleanField(blank='True', default=False, verbose_name='Закрепить материал')),
                ('atMain',
                 models.BooleanField(blank='True', default=False, verbose_name='Вывести материал на главную страницу')),
                ('author',
                 models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL,
                                   verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'Запись',
                'verbose_name_plural': 'Записи',
            },
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Название тега')),
            ],
        ),
        migrations.CreateModel(
            name='CategoriesNews',
            fields=[
                ('categories_ptr',
                 models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True,
                                      primary_key=True, serialize=False, to='entries.Categories')),
            ],
            options={
                'verbose_name': 'Категория новостей',
                'verbose_name_plural': 'Категории новостей',
            },
            bases=('entries.categories',),
        ),
        migrations.CreateModel(
            name='EntryNews',
            fields=[
                ('entry_ptr',
                 models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True,
                                      primary_key=True, serialize=False, to='entries.Entry')),
                ('shortDescript', models.TextField(verbose_name='Короткое описание')),
                ('source', models.URLField(blank=True, verbose_name='Источник')),
                ('categories', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING,
                                                 to='entries.CategoriesNews', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Новость',
                'verbose_name_plural': 'Новости',
            },
            bases=('entries.entry',),
        ),
        migrations.AddField(
            model_name='entry',
            name='tags',
            field=models.ManyToManyField(blank=True, to='entries.Tags', verbose_name='Теги'),
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image1', models.ImageField(upload_to='entries/gallery')),
                ('image2', models.ImageField(upload_to='entries/gallery')),
                ('image3', models.ImageField(upload_to='entries/gallery')),
                ('image4', models.ImageField(upload_to='entries/gallery')),
                ('image5', models.ImageField(upload_to='entries/gallery')),
                ('image6', models.ImageField(upload_to='entries/gallery')),
                ('image7', models.ImageField(upload_to='entries/gallery')),
                ('image8', models.ImageField(upload_to='entries/gallery')),
                ('image9', models.ImageField(upload_to='entries/gallery')),
                ('image10', models.ImageField(upload_to='entries/gallery')),
                ('image11', models.ImageField(upload_to='entries/gallery')),
                ('image12', models.ImageField(upload_to='entries/gallery')),
                ('image13', models.ImageField(upload_to='entries/gallery')),
                ('image14', models.ImageField(upload_to='entries/gallery')),
                ('image15', models.ImageField(upload_to='entries/gallery')),
                ('entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entries.EntryNews')),
            ],
        ),
    ]
