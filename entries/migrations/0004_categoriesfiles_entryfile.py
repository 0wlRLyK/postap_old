# Generated by Django 3.0.5 on 2020-05-03 19:39

import django.core.validators
import django.db.models.deletion
import entries.models
import stdimage.models
import taggit.managers
import tinymce.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('gallery', '0014_auto_20200503_1455'),
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('entries', '0003_auto_20200503_1510'),
    ]

    operations = [
        migrations.CreateModel(
            name='CategoriesFiles',
            fields=[
                ('categories_ptr',
                 models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True,
                                      primary_key=True, serialize=False, to='entries.Categories')),
            ],
            options={
                'verbose_name': 'Категория файлов',
                'verbose_name_plural': 'Категории файлов',
            },
            bases=('entries.categories',),
        ),
        migrations.CreateModel(
            name='EntryFile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('slug',
                 models.SlugField(help_text='Навзание, которое будет отображаться в URL', max_length=25, unique=True)),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='Время добавления')),
                ('shortDescript', tinymce.models.HTMLField(verbose_name='Короткое описание')),
                ('descript', tinymce.models.HTMLField(verbose_name='Описание')),
                ('image', stdimage.models.StdImageField(default='postap.png', null=True,
                                                        upload_to=entries.models.upload_to_entries,
                                                        verbose_name='Илюстрация')),
                ('file', models.FileField(blank=True, upload_to=entries.models.upload_to_file, verbose_name='Файл')),
                ('torrent1', models.FileField(blank=True, upload_to=entries.models.upload_to_torrent,
                                              validators=[django.core.validators.FileExtensionValidator(['torrent'])],
                                              verbose_name='Торрент #1')),
                ('torrent2', models.FileField(blank=True, upload_to=entries.models.upload_to_torrent,
                                              validators=[django.core.validators.FileExtensionValidator(['torrent'])],
                                              verbose_name='Торрент #1')),
                ('torrent3', models.FileField(blank=True, upload_to=entries.models.upload_to_torrent,
                                              validators=[django.core.validators.FileExtensionValidator(['torrent'])],
                                              verbose_name='Торрент #1')),
                ('gdrive', models.URLField(blank=True, verbose_name='Google')),
                ('yadrive', models.URLField(blank=True, verbose_name='Yandex')),
                ('mega', models.URLField(blank=True, verbose_name='MEGA')),
                ('source1', models.URLField(blank=True, verbose_name='Другой источник #1')),
                ('source2', models.URLField(blank=True, verbose_name='Другой источник #2')),
                ('source3', models.URLField(blank=True, verbose_name='Другой источник #3')),
                ('inTop', models.BooleanField(blank='True', default=False, verbose_name='Закрепить материал')),
                ('atMain',
                 models.BooleanField(blank='True', default=False, verbose_name='Вывести материал на главную страницу')),
                ('author',
                 models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL,
                                   verbose_name='Автор')),
                ('categories', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING,
                                                 to='entries.CategoriesFiles', verbose_name='Категория')),
                ('objgallery', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                                 to='gallery.Gallery')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.',
                                                         through='taggit.TaggedItem', to='taggit.Tag',
                                                         verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'Файл',
                'verbose_name_plural': 'Файлы',
            },
        ),
    ]
