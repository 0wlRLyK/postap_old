"""
Django settings for postap project.

Generated by 'django-admin startproject' using Django 3.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

from django.utils.translation import gettext_lazy as _
from easy_thumbnails.conf import Settings as thumbnail_settings

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '63&hf6if7i)i9pji(1a7!yll*-p%71i!@qh9jj&0^txy%o1wzz'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'nucleus',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.sites',
    'django.contrib.staticfiles',
    'userena',
    'users',
    'guardian',
    'easy_thumbnails',
    'image_cropping',
    'cities_light',

    # Comments
    'django_comments_xtd',
    'django_comments',

    'hitcount',
    # '',

    # EXTENSIONS OF DEFAULT DJANGO FUNCTIONALITY
    'betterforms',
    'extra_views',
    'online_status',

    'ajax_select',
    'tinymce',
    'taggit',
    'stdimage',
    'kp_html_meta',

    # POSTAP APPS
    'entries',
    'gallery',
    'voting',
    'equipment',
    'favorites',

    # TEMPORARY APPS

    # Pinax apps

    'ckeditor_uploader',
    'ckeditor',
    'rest_framework',
    'django_cleanup.apps.CleanupConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'online_status.middleware.OnlineStatusMiddleware',
]

ROOT_URLCONF = 'postap.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'tmp'),
                 # MACHINA_MAIN_TEMPLATE_DIR,
                 ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'nucleus.context_processors.nucleus',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'postap.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}
# ---------
# SECURITY
# ---------
# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTHENTICATION_BACKENDS = (
    'userena.backends.UserenaAuthenticationBackend',
    'guardian.backends.ObjectPermissionBackend',
    'users.backends.NewBackend',
    'django.contrib.auth.backends.ModelBackend',
)

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = False

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

PROJECT_ROOT = os.path.dirname(os.path.abspath(__file__))

# путь до папки media, в общем случае она пуста в начале

STATIC_URL = '/static/'
# STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
    # MACHINA_MAIN_STATIC_DIR
]
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# --------
# USERENA
# --------
AUTH_USER_MODEL = 'users.SiteUser'
ANONYMOUS_USER_NAME = 'AnonymousUser'
AUTH_PROFILE_MODULE = 'users.UsersProfiles'

USERENA_SIGNIN_REDIRECT_URL = '/pda/%(username)s/'
USERENA_MUGSHOT_PATH = "user_profiles/"

AVATAR_PROPORTIONS = 250  # 250.width X 250.height px
ratio_ava = [50,  # 'thumbnail'
             100,  # 'small'
             200,  # 'middle'
             500]  # 'orig'
AVATAR_VARIATIONS = {'thumbnail': (ratio_ava[0], ratio_ava[0], True),
                     'small': (ratio_ava[1], ratio_ava[1], True),
                     'middle': (ratio_ava[2], ratio_ava[2], True),
                     'orig': (ratio_ava[3], ratio_ava[3])}

CITIES_LIGHT_TRANSLATION_LANGUAGES = ['ru', 'uk', 'be', 'en']
CITIES_LIGHT_INCLUDE_CITY_TYPES = ['PPL', 'PPLA', 'PPLA2', 'PPLA3', 'PPLA4']
LOGIN_URL = '/users/signin/'
LOGOUT_URL = '/users/signout/'
EMAIL_BACKEND = 'django.core.mail.backends.dummy.EmailBackend'
SITE_ID = 1
EMAIL_USE_TLS = True
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_HOST_USER = 'yourgmailaccount@gmail.com'
EMAIL_HOST_PASSWORD = 'yourgmailpassword'
# -----
# USERS
# -----
AJAX_LOOKUP_CHANNELS = {'cities_light_country': ('cities_light.contrib.ajax_selects_lookups', 'CountryLookup'),
                        'cities_light_city': ('cities_light.contrib.ajax_selects_lookups', 'CityLookup'), }
GENDERS = (
    ("male", _("Male")),
    ("female", _("Female")),
)
# -------....___________
# IMAGES AND THUMBNAILS
# -------....___________
IMAGE_CROPPING_BACKEND = 'image_cropping.backends.easy_thumbs.EasyThumbnailsBackend'
IMAGE_CROPPING_BACKEND_PARAMS = {}
THUMBNAIL_PROCESSORS = (
                           'image_cropping.thumbnail_processors.crop_corners',
                       ) + thumbnail_settings.THUMBNAIL_PROCESSORS

# --------
# ENTRIES
# --------
ENTRIES_PER_PAGE = 2
# --------
# COMMENTS
# --------
COMMENTS_APP = 'django_comments_xtd'
COMMENTS_XTD_APP_MODEL_OPTIONS = {
    'entries.news': {
        'allow_flagging': True,
        'allow_feedback': True,
        'show_feedback': True,
    }
}
# -------
# META DESCRIPTION
# -------...
KP_META = {
    'kp_meta_title': "POSTAP.NET | Stalker network :: Все интересное из миров постапокалипсиса",
    'kp_meta_description': "Postap.net - все самое интересное из постапокалиптических миров",
    'kp_meta_keywords': "postap, постапокалипсис, stalker, metro 2033, fallout, survarium, сталкер, сталкер моды,"
                        "сталкерская сеть, сталкер сайт, сталкер гайды по прохождению,  сталкер вебсайт,"
                        "metro last light, metro exodus, metro книги",
    'kp_meta_graph_type': "article ",
    'kp_meta_graph_image': "https://postap.net/logo.jpg",
    'kp_meta_graph_url': "https://postap.net",
    'kp_meta_graph_locale': "ru_RU",
    'kp_get_base_url': "https://postap.net",
    'kp_meta_graph_site_name': "postap",
}

# /////////-------
# ADMIN INTERFACE
# /////////-------
CKEDITOR_BASEPATH = "/static/ckeditor/ckeditor/"
CKEDITOR_UPLOAD_PATH = "uploads/"
CKEDITOR_ALLOW_NONIMAGE_FILES = False
CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'full',
    },
}
_ = lambda s: s

NUCLEUS = {
    'sidebar': {
        # Title
        'title': _('POSTAP ADMINISTRATING'),

        # # Footer
        # 'footer': {
        #     'title': _('Custom title'),
        #     'description': _('Longer text displayed below the title'),
        # },

        # Navigation
        'navigation': {

            # Application
            'entries': {
                'title': _('Записи'),  # Override title
                'icon': 'admin/ui/img/entries/entries.svg'  # Optional
            },
            'News': {
                'title': _('Новости'),
                'icon': 'admin/ui/img/entries/news.svg'  # Optional
            },
            'NewsCategory': {
                'title': _('Категории новостей'),
                'icon': 'admin/ui/img/entries/category.svg'  # Optional
            },
            'Article': {
                'title': _('Статьи'),
                'icon': 'admin/ui/img/entries/news.svg'  # Optional
            },
            'ArticleCategory': {
                'title': _('Категории статей'),
                'icon': 'admin/ui/img/entries/category.svg'  # Optional
            },
            'Gallery': {
                'title': _('Галереи'),
                'icon': 'admin/ui/img/entries/gallery.svg'  # Optional
            },

        }
    }
}

